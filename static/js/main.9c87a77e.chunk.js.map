{"version":3,"sources":["Components/Todo.js","Components/App.js","index.js"],"names":["Todo","useState","inputData","setInputData","lists","localStorage","getItem","JSON","parse","getLocalData","items","setItems","isEditItem","setIsEditItem","toggleButton","setToggleButton","addItem","map","curEle","id","name","uniqueData","Date","getTime","toString","alert","useEffect","setItem","stringify","className","type","placeholder","value","onChange","event","target","onClick","index","updateEdit","find","editItem","updatedItem","filter","deletItem","App","Fragment","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iMAgIeA,EAlHF,WACX,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA0BF,mBAZP,WACnB,IAAMG,EAAQC,aAAaC,QAAQ,cAEnC,OAAIF,EACKG,KAAKC,MAAMJ,GAEX,GAM0BK,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAoCV,mBAAS,IAA7C,mBAAOW,EAAP,KAAmBC,EAAnB,KACA,EAAwCZ,oBAAS,GAAjD,mBAAOa,EAAP,KAAqBC,EAArB,KAGMC,EAAU,WACd,GAAKd,EAEE,GAAIA,GAAaY,EACtBH,EACED,EAAMO,KAAI,SAACC,GACT,OAAIA,EAAOC,KAAOP,EACT,2BAAKM,GAAZ,IAAoBE,KAAMlB,IAErBgB,MAGXf,EAAa,IACbU,EAAc,MACdE,GAAgB,OACX,CACL,IAAMM,EAAa,CACjBF,IAAI,IAAIG,MAAOC,UAAUC,WACzBJ,KAAMlB,GAERS,EAAS,GAAD,mBAAKD,GAAL,CAAYW,KACpBlB,EAAa,SAnBbsB,MAAM,sBA8CV,OAHAC,qBAAU,WACRrB,aAAasB,QAAQ,aAAcpB,KAAKqB,UAAUlB,MACjD,CAACA,IAEF,mCACE,qBAAKmB,UAAU,WAAf,SACE,sBAAKA,UAAU,YAAf,UACE,8BACE,4DAEF,sBAAKA,UAAU,WAAf,UACE,uBACEC,KAAK,OACLC,YAAY,kBACZF,UAAU,eACVG,MAAO9B,EACP+B,SAAU,SAACC,GAAD,OAAW/B,EAAa+B,EAAMC,OAAOH,UAEhDlB,EACC,mBAAGe,UAAU,sBAAsBO,QAASpB,IAE5C,mBAAGa,UAAU,qBAAqBO,QAASpB,OAK/C,qBAAKa,UAAU,YAAf,SACGnB,EAAMO,KAAI,SAACC,GACV,OACE,sBAAKW,UAAU,WAAf,UACE,6BAAKX,EAAOE,OACZ,sBAAKS,UAAU,WAAf,UACE,mBACEA,UAAU,sBACVO,QAAS,kBAtDZ,SAACC,GAChB,IAAMC,EAAa5B,EAAM6B,MAAK,SAACrB,GAC7B,OAAOA,EAAOC,KAAOkB,KAEvBlC,EAAamC,EAAWlB,MACxBP,EAAcwB,GACdtB,GAAgB,GAgDiByB,CAAStB,EAAOC,OAEjC,mBACEU,UAAU,2BACVO,QAAS,kBAjDX,SAACC,GACjB,IAAMI,EAAc/B,EAAMgC,QAAO,SAACxB,GAChC,OAAOA,EAAOC,KAAOkB,KAEvB1B,EAAS8B,GA6CwBE,CAAUzB,EAAOC,YATPD,EAAOC,SAkB5C,qBAAKU,UAAU,YAAf,SACE,wBACEA,UAAU,eACV,oBAAkB,aAClBO,QAvDM,WAChBzB,EAAS,KAmDD,SAKE,0DC1GCiC,EARH,WACV,OACE,cAAC,IAAMC,SAAP,UACE,cAAC,EAAD,OCHNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.9c87a77e.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./style.css\";\r\n\r\n// Get the Local Storage Data Back\r\nconst getLocalData = () => {\r\n  const lists = localStorage.getItem(\"mytodolist\");\r\n\r\n  if (lists) {\r\n    return JSON.parse(lists);\r\n  } else {\r\n    return [];\r\n  }\r\n};\r\n\r\nconst Todo = () => {\r\n  const [inputData, setInputData] = useState(\"\");\r\n  const [items, setItems] = useState(getLocalData());\r\n  const [isEditItem, setIsEditItem] = useState(\"\");\r\n  const [toggleButton, setToggleButton] = useState(false);\r\n\r\n  // Add Items\r\n  const addItem = () => {\r\n    if (!inputData) {\r\n      alert(\"plz fill the data\");\r\n    } else if (inputData && toggleButton) {\r\n      setItems(\r\n        items.map((curEle) => {\r\n          if (curEle.id === isEditItem) {\r\n            return { ...curEle, name: inputData };\r\n          }\r\n          return curEle;\r\n        })\r\n      );\r\n      setInputData(\"\");\r\n      setIsEditItem(null);\r\n      setToggleButton(false);\r\n    } else {\r\n      const uniqueData = {\r\n        id: new Date().getTime().toString(),\r\n        name: inputData,\r\n      };\r\n      setItems([...items, uniqueData]);\r\n      setInputData(\"\");\r\n    }\r\n  };\r\n  //Edit Items\r\n  const editItem = (index) => {\r\n    const updateEdit = items.find((curEle) => {\r\n      return curEle.id === index;\r\n    });\r\n    setInputData(updateEdit.name);\r\n    setIsEditItem(index);\r\n    setToggleButton(true);\r\n  };\r\n  // Delete Items\r\n  const deletItem = (index) => {\r\n    const updatedItem = items.filter((curEle) => {\r\n      return curEle.id !== index;\r\n    });\r\n    setItems(updatedItem);\r\n  };\r\n  // Remove All Items\r\n  const removeAll = () => {\r\n    setItems([]);\r\n  };\r\n  //Local Storage\r\n  useEffect(() => {\r\n    localStorage.setItem(\"mytodolist\", JSON.stringify(items));\r\n  }, [items]);\r\n  return (\r\n    <>\r\n      <div className=\"main-div\">\r\n        <div className=\"child-div\">\r\n          <div>\r\n            <p>Add Your List Here ✌</p>\r\n          </div>\r\n          <div className=\"addItems\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"✍ Add Item\"\r\n              className=\"form-control\"\r\n              value={inputData}\r\n              onChange={(event) => setInputData(event.target.value)}\r\n            />\r\n            {toggleButton ? (\r\n              <i className=\"far fa-edit add-btn\" onClick={addItem}></i>\r\n            ) : (\r\n              <i className=\"fa fa-plus add-btn\" onClick={addItem}></i>\r\n            )}\r\n          </div>\r\n\r\n          {/* Show Items */}\r\n          <div className=\"showItems\">\r\n            {items.map((curEle) => {\r\n              return (\r\n                <div className=\"eachItem\" key={curEle.id}>\r\n                  <h3>{curEle.name}</h3>\r\n                  <div className=\"todo-btn\">\r\n                    <i\r\n                      className=\"far fa-edit add-btn\"\r\n                      onClick={() => editItem(curEle.id)}\r\n                    ></i>\r\n                    <i\r\n                      className=\"far fa-trash-alt add-btn\"\r\n                      onClick={() => deletItem(curEle.id)}\r\n                    ></i>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n\r\n          {/* Remove Items */}\r\n          <div className=\"showItems\">\r\n            <button\r\n              className=\"btn effect04\"\r\n              data-sm-link-text=\"Remove All\"\r\n              onClick={removeAll}\r\n            >\r\n              <span>CHECK LIST</span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n","import React from \"react\";\nimport Todo from \"./Todo\";\n\n\n\nconst App = () => {\n  return (\n    <React.Fragment>\n      <Todo />\n    </React.Fragment>\n  );\n};\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}